# -*- coding: utf-8 -*-
"""Untitled3.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/github/Dumssss/python-course/blob/main/Untitled3.ipynb

# Premiere execution de code
"""

for i in [0, 1, 2]:
  print("valeur :", i)
print("Fin")

"""Ecrire une fonction qui affiche tous les nombres pairs de 0 à 20"""

list(range(10, 20, 2))

"""Demander une entrée"""

x = int(input("Donnez un entier : "))

print("x =", x)

"""# Les bases"""

list_voyelles = ['a', 'e', 'i', 'o', 'u' ,'y']
spells = ['Firivraductobadamusi', 'Sonocuriboumproboum', 'Craboumcuribadadiyo', 'Ridimotocorpucorpucia', 'Feratrumtarafia', 'Desflimotomoto']
score = 0

for spell in spells:
  nb_voyelles = 0
  nb_consonnes = 0
  dangereux = False

  s=spell.lower()
  if s[0] in list_voyelles :
    dangereux = True
  for c in s :
    if c in list_voyelles:
      nb_voyelles += 1
    else :
      nb_consonnes += 1
  if nb_voyelles < nb_consonnes :
    score += 5
  if nb_voyelles == nb_consonnes :
    score += 10
  if nb_voyelles > nb_consonnes :
    score += 15
  if dangereux:
    score += 10

print(score)

code = "67 104 97 113 117 101 32 103 233 110 233 114 97 116 105 111 110 32 97 32 115 111 110 32 112 104 105 108 111 115 111 112 104 101 44 32 233 99 114 105 118 97 105 110 32 111 117 32 97 114 116 105 115 116 101 32 113 117 105 32 115 97 105 115 105 116 32 101 116 10 105 110 99 97 114 110 101 32 108 39 105 109 97 103 105 110 97 105 114 101 32 100 117 32 109 111 109 101 110 116 46 32 73 108 32 97 114 114 105 118 101 32 113 117 101 32 99 101 115 32 112 104 105 108 111 115 111 112 104 101 115 32 115 111 105 101 110 116 10 114 101 99 111 110 110 117 115 32 100 101 32 108 101 117 114 32 118 105 118 97 110 116 44 32 109 97 105 115 32 108 101 32 112 108 117 115 32 115 111 117 118 101 110 116 32 105 108 32 102 97 117 116 32 97 116 116 101 110 100 114 101 32 113 117 101 32 108 97 10 112 97 116 105 110 101 32 100 117 32 116 101 109 112 115 32 102 97 115 115 101 32 115 111 110 32 101 102 102 101 116 46 32 81 117 101 32 99 101 116 116 101 32 114 101 99 111 110 110 97 105 115 115 97 110 99 101 32 115 111 105 116 10 105 109 109 233 100 105 97 116 101 32 111 117 32 100 105 102 102 233 114 233 101 44 32 117 110 101 32 233 112 111 113 117 101 32 101 115 116 32 109 97 114 113 117 233 101 32 112 97 114 32 99 101 115 32 104 111 109 109 101 115 32 113 117 105 10 101 120 112 114 105 109 101 110 116 32 108 101 117 114 115 32 105 100 233 97 117 120 44 32 100 97 110 115 32 108 101 115 32 109 117 114 109 117 114 101 115 32 100 39 117 110 32 112 111 232 109 101 32 111 117 32 100 97 110 115 32 108 101 10 103 114 111 110 100 101 109 101 110 116 32 100 39 117 110 32 109 111 117 118 101 109 101 110 116 32 112 111 108 105 116 105 113 117 101 46 32 78 111 116 114 101 32 103 233 110 233 114 97 116 105 111 110 32 97 32 117 110 10 112 104 105 108 111 115 111 112 104 101 46 32 67 101 32 110 39 101 115 116 32 110 105 32 117 110 32 97 114 116 105 115 116 101 32 110 105 32 117 110 32 233 99 114 105 118 97 105 110 46 32 67 39 101 115 116 32 117 110 10 105 110 102 111 114 109 97 116 105 99 105 101 110 46 10"

message = "67 104 97 113 117 101 32 103 233 110 233 114 97 116 105 111 110 32 97 32 115 111 110 32 112 104 105 108 111 115 111 112 104 101 44 32 233 99 114 105 118 97 105 110 32 111 117 32 97 114 116 105 115 116 101 32 113 117 105 32 115 97 105 115 105 116 32 101 116 10 105 110 99 97 114 110 101 32 108 39 105 109 97 103 105 110 97 105 114 101 32 100 117 32 109 111 109 101 110 116 46 32 73 108 32 97 114 114 105 118 101 32 113 117 101 32 99 101 115 32 112 104 105 108 111 115 111 112 104 101 115 32 115 111 105 101 110 116 10 114 101 99 111 110 110 117 115 32 100 101 32 108 101 117 114 32 118 105 118 97 110 116 44 32 109 97 105 115 32 108 101 32 112 108 117 115 32 115 111 117 118 101 110 116 32 105 108 32 102 97 117 116 32 97 116 116 101 110 100 114 101 32 113 117 101 32 108 97 10 112 97 116 105 110 101 32 100 117 32 116 101 109 112 115 32 102 97 115 115 101 32 115 111 110 32 101 102 102 101 116 46 32 81 117 101 32 99 101 116 116 101 32 114 101 99 111 110 110 97 105 115 115 97 110 99 101 32 115 111 105 116 10 105 109 109 233 100 105 97 116 101 32 111 117 32 100 105 102 102 233 114 233 101 44 32 117 110 101 32 233 112 111 113 117 101 32 101 115 116 32 109 97 114 113 117 233 101 32 112 97 114 32 99 101 115 32 104 111 109 109 101 115 32 113 117 105 10 101 120 112 114 105 109 101 110 116 32 108 101 117 114 115 32 105 100 233 97 117 120 44 32 100 97 110 115 32 108 101 115 32 109 117 114 109 117 114 101 115 32 100 39 117 110 32 112 111 232 109 101 32 111 117 32 100 97 110 115 32 108 101 10 103 114 111 110 100 101 109 101 110 116 32 100 39 117 110 32 109 111 117 118 101 109 101 110 116 32 112 111 108 105 116 105 113 117 101 46 32 78 111 116 114 101 32 103 233 110 233 114 97 116 105 111 110 32 97 32 117 110 10 112 104 105 108 111 115 111 112 104 101 46 32 67 101 32 110 39 101 115 116 32 110 105 32 117 110 32 97 114 116 105 115 116 101 32 110 105 32 117 110 32 233 99 114 105 118 97 105 110 46 32 67 39 101 115 116 32 117 110 10 105 110 102 111 114 109 97 116 105 99 105 101 110 46 10"
text = ""
for code in message.split():
  text += chr(int(code))
print(text)

"""Determiner la valeur de chaque lettre pour que l'opération suivantes soit correct (cryptarithme)
send + more = money

Sachant que :
1.   chaque lettre représente un chiffre différent entre 0 et 9
2.   Les premiers chiffres de chaque nombre ne peuvent etre nuls
"""

for s in range(1, 10):
  for e in range(10):
    if e == s :
      continue
    for n in range(10):
      if n == s or n == e :
        continue
      for d in range(10):
        if d == s or d == e or d == n:
          continue
        for m in range(1, 10):
          if m == s or m == e or m == n or m == d:
            continue
          for o in range(10):
            if o == s or o == e or o == n or o == d or o == m:
              continue
            for r in range(10):
              if r == s or r == e or r == n or r == d or r == m or r == o:
                continue
              for y in range(10):
                if y == s or y == e or y == n or y == d or y == m or y == o or y == r:
                  continue
                send = s * 1000 + e * 100 + n * 10 + d
                more = m * 1000 + o * 100 + r * 10 + e
                money = m * 10000 + o * 1000 + n * 100 + e * 10 + y
                if send + more == money :
                  print(f's = {s}, e = {e}, n = {n}, d = {d}, m = {m}, o = {o}, r = {r}, y = {y}')
                  print("send + more = money")
                  print(send ,'+', more ,'=' , money)

"""Aidez un crépier à ordonner ses crêpes par ordre décroissant de diamètre (de la plus grande à la plus petite, la plus grande en bas)

Attention vous n'avez qu'une spatule pour retourner la pile de crêpes
"""

pile = [6, 7, 1, 3, 2, 8, 9, 5, 4]

def retourne(pile, index): 
  if index < len(pile):
    return pile[:index] + list(reversed(pile[index:]))
  else : 
    return(pile)

retourne(pile, 0)

def tri(pile, index):
  new_pile = pile[index:]
  print('pile:' , new_pile)
  if len(new_pile) > 0:
    max_index = new_pile.index(max(new_pile))
    step1 = retourne(new_pile, max_index)
    print('step1:', step1)
    step2 = retourne(step1, 0)
    print('step2', step2)
    return tri(step2, 1)
  else:
    return(pile)

tri(pile, 0)